// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.3
// source: proto/colibri/v1/colibri.proto

package colibri

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IndexState_State int32

const (
	IndexState_PENDING IndexState_State = 0
	IndexState_ACTIVE  IndexState_State = 1
)

// Enum value maps for IndexState_State.
var (
	IndexState_State_name = map[int32]string{
		0: "PENDING",
		1: "ACTIVE",
	}
	IndexState_State_value = map[string]int32{
		"PENDING": 0,
		"ACTIVE":  1,
	}
)

func (x IndexState_State) Enum() *IndexState_State {
	p := new(IndexState_State)
	*p = x
	return p
}

func (x IndexState_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IndexState_State) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_colibri_v1_colibri_proto_enumTypes[0].Descriptor()
}

func (IndexState_State) Type() protoreflect.EnumType {
	return &file_proto_colibri_v1_colibri_proto_enumTypes[0]
}

func (x IndexState_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IndexState_State.Descriptor instead.
func (IndexState_State) EnumDescriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{1, 0}
}

type ReservationID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asid   uint64 `protobuf:"varint,1,opt,name=asid,proto3" json:"asid,omitempty"`
	Suffix []byte `protobuf:"bytes,2,opt,name=suffix,proto3" json:"suffix,omitempty"`
}

func (x *ReservationID) Reset() {
	*x = ReservationID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationID) ProtoMessage() {}

func (x *ReservationID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationID.ProtoReflect.Descriptor instead.
func (*ReservationID) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{0}
}

func (x *ReservationID) GetAsid() uint64 {
	if x != nil {
		return x.Asid
	}
	return 0
}

func (x *ReservationID) GetSuffix() []byte {
	if x != nil {
		return x.Suffix
	}
	return nil
}

type IndexState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State IndexState_State `protobuf:"varint,1,opt,name=state,proto3,enum=proto.colibri.v1.IndexState_State" json:"state,omitempty"`
}

func (x *IndexState) Reset() {
	*x = IndexState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexState) ProtoMessage() {}

func (x *IndexState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexState.ProtoReflect.Descriptor instead.
func (*IndexState) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{1}
}

func (x *IndexState) GetState() IndexState_State {
	if x != nil {
		return x.State
	}
	return IndexState_PENDING
}

type PathEndProps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Local    bool `protobuf:"varint,1,opt,name=local,proto3" json:"local,omitempty"`
	Transfer bool `protobuf:"varint,2,opt,name=transfer,proto3" json:"transfer,omitempty"`
}

func (x *PathEndProps) Reset() {
	*x = PathEndProps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PathEndProps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathEndProps) ProtoMessage() {}

func (x *PathEndProps) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathEndProps.ProtoReflect.Descriptor instead.
func (*PathEndProps) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{2}
}

func (x *PathEndProps) GetLocal() bool {
	if x != nil {
		return x.Local
	}
	return false
}

func (x *PathEndProps) GetTransfer() bool {
	if x != nil {
		return x.Transfer
	}
	return false
}

type AllocationBead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Allocbw uint32 `protobuf:"varint,1,opt,name=allocbw,proto3" json:"allocbw,omitempty"`
	Maxbw   uint32 `protobuf:"varint,2,opt,name=maxbw,proto3" json:"maxbw,omitempty"`
}

func (x *AllocationBead) Reset() {
	*x = AllocationBead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocationBead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocationBead) ProtoMessage() {}

func (x *AllocationBead) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocationBead.ProtoReflect.Descriptor instead.
func (*AllocationBead) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{3}
}

func (x *AllocationBead) GetAllocbw() uint32 {
	if x != nil {
		return x.Allocbw
	}
	return 0
}

func (x *AllocationBead) GetMaxbw() uint32 {
	if x != nil {
		return x.Maxbw
	}
	return 0
}

type PathStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ia      uint64 `protobuf:"varint,1,opt,name=ia,proto3" json:"ia,omitempty"`
	Ingress uint32 `protobuf:"varint,2,opt,name=ingress,proto3" json:"ingress,omitempty"`
	Egress  uint32 `protobuf:"varint,3,opt,name=egress,proto3" json:"egress,omitempty"`
}

func (x *PathStep) Reset() {
	*x = PathStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PathStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathStep) ProtoMessage() {}

func (x *PathStep) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathStep.ProtoReflect.Descriptor instead.
func (*PathStep) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{4}
}

func (x *PathStep) GetIa() uint64 {
	if x != nil {
		return x.Ia
	}
	return 0
}

func (x *PathStep) GetIngress() uint32 {
	if x != nil {
		return x.Ingress
	}
	return 0
}

func (x *PathStep) GetEgress() uint32 {
	if x != nil {
		return x.Egress
	}
	return 0
}

type TransparentPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentStep uint32      `protobuf:"varint,1,opt,name=current_step,json=currentStep,proto3" json:"current_step,omitempty"`
	Steps       []*PathStep `protobuf:"bytes,2,rep,name=steps,proto3" json:"steps,omitempty"`
	SpathType   uint32      `protobuf:"varint,3,opt,name=spathType,proto3" json:"spathType,omitempty"`
	SpathRaw    []byte      `protobuf:"bytes,4,opt,name=spathRaw,proto3" json:"spathRaw,omitempty"`
}

func (x *TransparentPath) Reset() {
	*x = TransparentPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransparentPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransparentPath) ProtoMessage() {}

func (x *TransparentPath) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransparentPath.ProtoReflect.Descriptor instead.
func (*TransparentPath) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{5}
}

func (x *TransparentPath) GetCurrentStep() uint32 {
	if x != nil {
		return x.CurrentStep
	}
	return 0
}

func (x *TransparentPath) GetSteps() []*PathStep {
	if x != nil {
		return x.Steps
	}
	return nil
}

func (x *TransparentPath) GetSpathType() uint32 {
	if x != nil {
		return x.SpathType
	}
	return 0
}

func (x *TransparentPath) GetSpathRaw() []byte {
	if x != nil {
		return x.SpathRaw
	}
	return nil
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        *ReservationID   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Index     uint32           `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Timestamp uint32           `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Path      *TransparentPath `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{6}
}

func (x *Request) GetId() *ReservationID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Request) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Request) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Request) GetPath() *TransparentPath {
	if x != nil {
		return x.Path
	}
	return nil
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to SuccessFailure:
	//	*Response_Success_
	//	*Response_Failure_
	SuccessFailure isResponse_SuccessFailure `protobuf_oneof:"success_failure"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{7}
}

func (m *Response) GetSuccessFailure() isResponse_SuccessFailure {
	if m != nil {
		return m.SuccessFailure
	}
	return nil
}

func (x *Response) GetSuccess() *Response_Success {
	if x, ok := x.GetSuccessFailure().(*Response_Success_); ok {
		return x.Success
	}
	return nil
}

func (x *Response) GetFailure() *Response_Failure {
	if x, ok := x.GetSuccessFailure().(*Response_Failure_); ok {
		return x.Failure
	}
	return nil
}

type isResponse_SuccessFailure interface {
	isResponse_SuccessFailure()
}

type Response_Success_ struct {
	Success *Response_Success `protobuf:"bytes,1,opt,name=success,proto3,oneof"`
}

type Response_Failure_ struct {
	Failure *Response_Failure `protobuf:"bytes,2,opt,name=failure,proto3,oneof"`
}

func (*Response_Success_) isResponse_SuccessFailure() {}

func (*Response_Failure_) isResponse_SuccessFailure() {}

type SegmentSetupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base   *Request                    `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Params *SegmentSetupRequest_Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *SegmentSetupRequest) Reset() {
	*x = SegmentSetupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SegmentSetupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SegmentSetupRequest) ProtoMessage() {}

func (x *SegmentSetupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SegmentSetupRequest.ProtoReflect.Descriptor instead.
func (*SegmentSetupRequest) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{8}
}

func (x *SegmentSetupRequest) GetBase() *Request {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *SegmentSetupRequest) GetParams() *SegmentSetupRequest_Params {
	if x != nil {
		return x.Params
	}
	return nil
}

type SegmentSetupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to SuccessFailure:
	//	*SegmentSetupResponse_Token
	//	*SegmentSetupResponse_Failure_
	SuccessFailure isSegmentSetupResponse_SuccessFailure `protobuf_oneof:"success_failure"`
}

func (x *SegmentSetupResponse) Reset() {
	*x = SegmentSetupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SegmentSetupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SegmentSetupResponse) ProtoMessage() {}

func (x *SegmentSetupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SegmentSetupResponse.ProtoReflect.Descriptor instead.
func (*SegmentSetupResponse) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{9}
}

func (m *SegmentSetupResponse) GetSuccessFailure() isSegmentSetupResponse_SuccessFailure {
	if m != nil {
		return m.SuccessFailure
	}
	return nil
}

func (x *SegmentSetupResponse) GetToken() []byte {
	if x, ok := x.GetSuccessFailure().(*SegmentSetupResponse_Token); ok {
		return x.Token
	}
	return nil
}

func (x *SegmentSetupResponse) GetFailure() *SegmentSetupResponse_Failure {
	if x, ok := x.GetSuccessFailure().(*SegmentSetupResponse_Failure_); ok {
		return x.Failure
	}
	return nil
}

type isSegmentSetupResponse_SuccessFailure interface {
	isSegmentSetupResponse_SuccessFailure()
}

type SegmentSetupResponse_Token struct {
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3,oneof"`
}

type SegmentSetupResponse_Failure_ struct {
	Failure *SegmentSetupResponse_Failure `protobuf:"bytes,2,opt,name=failure,proto3,oneof"`
}

func (*SegmentSetupResponse_Token) isSegmentSetupResponse_SuccessFailure() {}

func (*SegmentSetupResponse_Failure_) isSegmentSetupResponse_SuccessFailure() {}

type ListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DstIa    uint64 `protobuf:"varint,1,opt,name=dst_ia,json=dstIa,proto3" json:"dst_ia,omitempty"`
	PathType uint32 `protobuf:"varint,2,opt,name=path_type,json=pathType,proto3" json:"path_type,omitempty"`
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{10}
}

func (x *ListRequest) GetDstIa() uint64 {
	if x != nil {
		return x.DstIa
	}
	return 0
}

func (x *ListRequest) GetPathType() uint32 {
	if x != nil {
		return x.PathType
	}
	return 0
}

type ListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMessage string                           `protobuf:"bytes,1,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Reservations []*ListResponse_ReservationLooks `protobuf:"bytes,2,rep,name=reservations,proto3" json:"reservations,omitempty"`
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{11}
}

func (x *ListResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ListResponse) GetReservations() []*ListResponse_ReservationLooks {
	if x != nil {
		return x.Reservations
	}
	return nil
}

type E2ESetupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base            *Request                        `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	RequestedBw     uint32                          `protobuf:"varint,3,opt,name=requestedBw,proto3" json:"requestedBw,omitempty"`
	Params          *E2ESetupRequest_PathParams     `protobuf:"bytes,4,opt,name=params,proto3" json:"params,omitempty"`
	Allocationtrail []*E2ESetupRequest_E2ESetupBead `protobuf:"bytes,5,rep,name=allocationtrail,proto3" json:"allocationtrail,omitempty"`
}

func (x *E2ESetupRequest) Reset() {
	*x = E2ESetupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ESetupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ESetupRequest) ProtoMessage() {}

func (x *E2ESetupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ESetupRequest.ProtoReflect.Descriptor instead.
func (*E2ESetupRequest) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{12}
}

func (x *E2ESetupRequest) GetBase() *Request {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *E2ESetupRequest) GetRequestedBw() uint32 {
	if x != nil {
		return x.RequestedBw
	}
	return 0
}

func (x *E2ESetupRequest) GetParams() *E2ESetupRequest_PathParams {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *E2ESetupRequest) GetAllocationtrail() []*E2ESetupRequest_E2ESetupBead {
	if x != nil {
		return x.Allocationtrail
	}
	return nil
}

type E2ESetupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Failure *E2ESetupResponse_Failure `protobuf:"bytes,1,opt,name=failure,proto3" json:"failure,omitempty"`
	Token   []byte                    `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *E2ESetupResponse) Reset() {
	*x = E2ESetupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ESetupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ESetupResponse) ProtoMessage() {}

func (x *E2ESetupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ESetupResponse.ProtoReflect.Descriptor instead.
func (*E2ESetupResponse) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{13}
}

func (x *E2ESetupResponse) GetFailure() *E2ESetupResponse_Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

func (x *E2ESetupResponse) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

type ListStitchablesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DstIa uint64 `protobuf:"varint,1,opt,name=dst_ia,json=dstIa,proto3" json:"dst_ia,omitempty"`
}

func (x *ListStitchablesRequest) Reset() {
	*x = ListStitchablesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStitchablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStitchablesRequest) ProtoMessage() {}

func (x *ListStitchablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStitchablesRequest.ProtoReflect.Descriptor instead.
func (*ListStitchablesRequest) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{14}
}

func (x *ListStitchablesRequest) GetDstIa() uint64 {
	if x != nil {
		return x.DstIa
	}
	return 0
}

type ListStitchablesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMessage string                           `protobuf:"bytes,1,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	SrcIa        uint64                           `protobuf:"varint,2,opt,name=src_ia,json=srcIa,proto3" json:"src_ia,omitempty"`
	DstIa        uint64                           `protobuf:"varint,3,opt,name=dst_ia,json=dstIa,proto3" json:"dst_ia,omitempty"`
	Up           []*ListResponse_ReservationLooks `protobuf:"bytes,4,rep,name=up,proto3" json:"up,omitempty"`
	Core         []*ListResponse_ReservationLooks `protobuf:"bytes,5,rep,name=core,proto3" json:"core,omitempty"`
	Down         []*ListResponse_ReservationLooks `protobuf:"bytes,6,rep,name=down,proto3" json:"down,omitempty"`
}

func (x *ListStitchablesResponse) Reset() {
	*x = ListStitchablesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStitchablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStitchablesResponse) ProtoMessage() {}

func (x *ListStitchablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStitchablesResponse.ProtoReflect.Descriptor instead.
func (*ListStitchablesResponse) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{15}
}

func (x *ListStitchablesResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ListStitchablesResponse) GetSrcIa() uint64 {
	if x != nil {
		return x.SrcIa
	}
	return 0
}

func (x *ListStitchablesResponse) GetDstIa() uint64 {
	if x != nil {
		return x.DstIa
	}
	return 0
}

func (x *ListStitchablesResponse) GetUp() []*ListResponse_ReservationLooks {
	if x != nil {
		return x.Up
	}
	return nil
}

func (x *ListStitchablesResponse) GetCore() []*ListResponse_ReservationLooks {
	if x != nil {
		return x.Core
	}
	return nil
}

func (x *ListStitchablesResponse) GetDown() []*ListResponse_ReservationLooks {
	if x != nil {
		return x.Down
	}
	return nil
}

type DaemonSetupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcIa       uint64           `protobuf:"varint,1,opt,name=src_ia,json=srcIa,proto3" json:"src_ia,omitempty"`
	DstIa       uint64           `protobuf:"varint,2,opt,name=dst_ia,json=dstIa,proto3" json:"dst_ia,omitempty"`
	DstHost     []byte           `protobuf:"bytes,3,opt,name=dst_host,json=dstHost,proto3" json:"dst_host,omitempty"`
	Id          *ReservationID   `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	Index       uint32           `protobuf:"varint,5,opt,name=index,proto3" json:"index,omitempty"`
	Segments    []*ReservationID `protobuf:"bytes,6,rep,name=segments,proto3" json:"segments,omitempty"`
	RequestedBw uint32           `protobuf:"varint,7,opt,name=requested_bw,json=requestedBw,proto3" json:"requested_bw,omitempty"`
}

func (x *DaemonSetupRequest) Reset() {
	*x = DaemonSetupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DaemonSetupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DaemonSetupRequest) ProtoMessage() {}

func (x *DaemonSetupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DaemonSetupRequest.ProtoReflect.Descriptor instead.
func (*DaemonSetupRequest) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{16}
}

func (x *DaemonSetupRequest) GetSrcIa() uint64 {
	if x != nil {
		return x.SrcIa
	}
	return 0
}

func (x *DaemonSetupRequest) GetDstIa() uint64 {
	if x != nil {
		return x.DstIa
	}
	return 0
}

func (x *DaemonSetupRequest) GetDstHost() []byte {
	if x != nil {
		return x.DstHost
	}
	return nil
}

func (x *DaemonSetupRequest) GetId() *ReservationID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *DaemonSetupRequest) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *DaemonSetupRequest) GetSegments() []*ReservationID {
	if x != nil {
		return x.Segments
	}
	return nil
}

func (x *DaemonSetupRequest) GetRequestedBw() uint32 {
	if x != nil {
		return x.RequestedBw
	}
	return 0
}

type DaemonSetupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Failure *DaemonSetupResponse_Failure `protobuf:"bytes,1,opt,name=failure,proto3" json:"failure,omitempty"`
	Success *DaemonSetupResponse_Success `protobuf:"bytes,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DaemonSetupResponse) Reset() {
	*x = DaemonSetupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DaemonSetupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DaemonSetupResponse) ProtoMessage() {}

func (x *DaemonSetupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DaemonSetupResponse.ProtoReflect.Descriptor instead.
func (*DaemonSetupResponse) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{17}
}

func (x *DaemonSetupResponse) GetFailure() *DaemonSetupResponse_Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

func (x *DaemonSetupResponse) GetSuccess() *DaemonSetupResponse_Success {
	if x != nil {
		return x.Success
	}
	return nil
}

type DaemonCleanupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    *ReservationID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Index uint32         `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *DaemonCleanupRequest) Reset() {
	*x = DaemonCleanupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DaemonCleanupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DaemonCleanupRequest) ProtoMessage() {}

func (x *DaemonCleanupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DaemonCleanupRequest.ProtoReflect.Descriptor instead.
func (*DaemonCleanupRequest) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{18}
}

func (x *DaemonCleanupRequest) GetId() *ReservationID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *DaemonCleanupRequest) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type DaemonCleanupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Failure *DaemonCleanupResponse_Failure `protobuf:"bytes,1,opt,name=failure,proto3" json:"failure,omitempty"`
}

func (x *DaemonCleanupResponse) Reset() {
	*x = DaemonCleanupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DaemonCleanupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DaemonCleanupResponse) ProtoMessage() {}

func (x *DaemonCleanupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DaemonCleanupResponse.ProtoReflect.Descriptor instead.
func (*DaemonCleanupResponse) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{19}
}

func (x *DaemonCleanupResponse) GetFailure() *DaemonCleanupResponse_Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

type DaemonAdmissionEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DstHost    []byte `protobuf:"bytes,1,opt,name=dst_host,json=dstHost,proto3" json:"dst_host,omitempty"`
	ValidUntil uint32 `protobuf:"varint,2,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"`
	RegexpIa   string `protobuf:"bytes,3,opt,name=regexp_ia,json=regexpIa,proto3" json:"regexp_ia,omitempty"`
	RegexpHost string `protobuf:"bytes,4,opt,name=regexp_host,json=regexpHost,proto3" json:"regexp_host,omitempty"`
	Accept     bool   `protobuf:"varint,5,opt,name=accept,proto3" json:"accept,omitempty"`
}

func (x *DaemonAdmissionEntry) Reset() {
	*x = DaemonAdmissionEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DaemonAdmissionEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DaemonAdmissionEntry) ProtoMessage() {}

func (x *DaemonAdmissionEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DaemonAdmissionEntry.ProtoReflect.Descriptor instead.
func (*DaemonAdmissionEntry) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{20}
}

func (x *DaemonAdmissionEntry) GetDstHost() []byte {
	if x != nil {
		return x.DstHost
	}
	return nil
}

func (x *DaemonAdmissionEntry) GetValidUntil() uint32 {
	if x != nil {
		return x.ValidUntil
	}
	return 0
}

func (x *DaemonAdmissionEntry) GetRegexpIa() string {
	if x != nil {
		return x.RegexpIa
	}
	return ""
}

func (x *DaemonAdmissionEntry) GetRegexpHost() string {
	if x != nil {
		return x.RegexpHost
	}
	return ""
}

func (x *DaemonAdmissionEntry) GetAccept() bool {
	if x != nil {
		return x.Accept
	}
	return false
}

type DaemonAdmissionEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValidUntil uint32 `protobuf:"varint,1,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"`
}

func (x *DaemonAdmissionEntryResponse) Reset() {
	*x = DaemonAdmissionEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DaemonAdmissionEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DaemonAdmissionEntryResponse) ProtoMessage() {}

func (x *DaemonAdmissionEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DaemonAdmissionEntryResponse.ProtoReflect.Descriptor instead.
func (*DaemonAdmissionEntryResponse) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{21}
}

func (x *DaemonAdmissionEntryResponse) GetValidUntil() uint32 {
	if x != nil {
		return x.ValidUntil
	}
	return 0
}

type Response_Success struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Response_Success) Reset() {
	*x = Response_Success{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_Success) ProtoMessage() {}

func (x *Response_Success) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_Success.ProtoReflect.Descriptor instead.
func (*Response_Success) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{7, 0}
}

type Response_Failure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode  uint32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	Message    string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	FailingHop uint32 `protobuf:"varint,3,opt,name=failing_hop,json=failingHop,proto3" json:"failing_hop,omitempty"`
}

func (x *Response_Failure) Reset() {
	*x = Response_Failure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_Failure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_Failure) ProtoMessage() {}

func (x *Response_Failure) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_Failure.ProtoReflect.Descriptor instead.
func (*Response_Failure) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{7, 1}
}

func (x *Response_Failure) GetErrorCode() uint32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *Response_Failure) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Response_Failure) GetFailingHop() uint32 {
	if x != nil {
		return x.FailingHop
	}
	return 0
}

type SegmentSetupRequest_Params struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpirationTime   uint32            `protobuf:"varint,1,opt,name=expiration_time,json=expirationTime,proto3" json:"expiration_time,omitempty"`
	Rlc              uint32            `protobuf:"varint,2,opt,name=rlc,proto3" json:"rlc,omitempty"`
	PathType         uint32            `protobuf:"varint,3,opt,name=path_type,json=pathType,proto3" json:"path_type,omitempty"`
	Minbw            uint32            `protobuf:"varint,4,opt,name=minbw,proto3" json:"minbw,omitempty"`
	Maxbw            uint32            `protobuf:"varint,5,opt,name=maxbw,proto3" json:"maxbw,omitempty"`
	Splitcls         uint32            `protobuf:"varint,6,opt,name=splitcls,proto3" json:"splitcls,omitempty"`
	PropsAtStart     *PathEndProps     `protobuf:"bytes,7,opt,name=props_at_start,json=propsAtStart,proto3" json:"props_at_start,omitempty"`
	PropsAtEnd       *PathEndProps     `protobuf:"bytes,8,opt,name=props_at_end,json=propsAtEnd,proto3" json:"props_at_end,omitempty"`
	Allocationtrail  []*AllocationBead `protobuf:"bytes,9,rep,name=allocationtrail,proto3" json:"allocationtrail,omitempty"`
	ReverseTraveling bool              `protobuf:"varint,10,opt,name=reverse_traveling,json=reverseTraveling,proto3" json:"reverse_traveling,omitempty"`
}

func (x *SegmentSetupRequest_Params) Reset() {
	*x = SegmentSetupRequest_Params{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SegmentSetupRequest_Params) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SegmentSetupRequest_Params) ProtoMessage() {}

func (x *SegmentSetupRequest_Params) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SegmentSetupRequest_Params.ProtoReflect.Descriptor instead.
func (*SegmentSetupRequest_Params) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{8, 0}
}

func (x *SegmentSetupRequest_Params) GetExpirationTime() uint32 {
	if x != nil {
		return x.ExpirationTime
	}
	return 0
}

func (x *SegmentSetupRequest_Params) GetRlc() uint32 {
	if x != nil {
		return x.Rlc
	}
	return 0
}

func (x *SegmentSetupRequest_Params) GetPathType() uint32 {
	if x != nil {
		return x.PathType
	}
	return 0
}

func (x *SegmentSetupRequest_Params) GetMinbw() uint32 {
	if x != nil {
		return x.Minbw
	}
	return 0
}

func (x *SegmentSetupRequest_Params) GetMaxbw() uint32 {
	if x != nil {
		return x.Maxbw
	}
	return 0
}

func (x *SegmentSetupRequest_Params) GetSplitcls() uint32 {
	if x != nil {
		return x.Splitcls
	}
	return 0
}

func (x *SegmentSetupRequest_Params) GetPropsAtStart() *PathEndProps {
	if x != nil {
		return x.PropsAtStart
	}
	return nil
}

func (x *SegmentSetupRequest_Params) GetPropsAtEnd() *PathEndProps {
	if x != nil {
		return x.PropsAtEnd
	}
	return nil
}

func (x *SegmentSetupRequest_Params) GetAllocationtrail() []*AllocationBead {
	if x != nil {
		return x.Allocationtrail
	}
	return nil
}

func (x *SegmentSetupRequest_Params) GetReverseTraveling() bool {
	if x != nil {
		return x.ReverseTraveling
	}
	return false
}

type SegmentSetupResponse_Failure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Failure *Response_Failure           `protobuf:"bytes,1,opt,name=failure,proto3" json:"failure,omitempty"`
	Request *SegmentSetupRequest_Params `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *SegmentSetupResponse_Failure) Reset() {
	*x = SegmentSetupResponse_Failure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SegmentSetupResponse_Failure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SegmentSetupResponse_Failure) ProtoMessage() {}

func (x *SegmentSetupResponse_Failure) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SegmentSetupResponse_Failure.ProtoReflect.Descriptor instead.
func (*SegmentSetupResponse_Failure) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{9, 0}
}

func (x *SegmentSetupResponse_Failure) GetFailure() *Response_Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

func (x *SegmentSetupResponse_Failure) GetRequest() *SegmentSetupRequest_Params {
	if x != nil {
		return x.Request
	}
	return nil
}

type ListResponse_ReservationLooks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             *ReservationID `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	SrcIa          uint64         `protobuf:"varint,2,opt,name=src_ia,json=srcIa,proto3" json:"src_ia,omitempty"`
	DstIa          uint64         `protobuf:"varint,3,opt,name=dst_ia,json=dstIa,proto3" json:"dst_ia,omitempty"`
	ExpirationTime uint32         `protobuf:"varint,4,opt,name=expiration_time,json=expirationTime,proto3" json:"expiration_time,omitempty"`
	Minbw          uint32         `protobuf:"varint,5,opt,name=minbw,proto3" json:"minbw,omitempty"`
	Maxbw          uint32         `protobuf:"varint,6,opt,name=maxbw,proto3" json:"maxbw,omitempty"`
	Allocbw        uint32         `protobuf:"varint,7,opt,name=allocbw,proto3" json:"allocbw,omitempty"`
	Splitcls       uint32         `protobuf:"varint,8,opt,name=splitcls,proto3" json:"splitcls,omitempty"`
	Path           []*PathStep    `protobuf:"bytes,9,rep,name=path,proto3" json:"path,omitempty"`
}

func (x *ListResponse_ReservationLooks) Reset() {
	*x = ListResponse_ReservationLooks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResponse_ReservationLooks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse_ReservationLooks) ProtoMessage() {}

func (x *ListResponse_ReservationLooks) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse_ReservationLooks.ProtoReflect.Descriptor instead.
func (*ListResponse_ReservationLooks) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{11, 0}
}

func (x *ListResponse_ReservationLooks) GetID() *ReservationID {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *ListResponse_ReservationLooks) GetSrcIa() uint64 {
	if x != nil {
		return x.SrcIa
	}
	return 0
}

func (x *ListResponse_ReservationLooks) GetDstIa() uint64 {
	if x != nil {
		return x.DstIa
	}
	return 0
}

func (x *ListResponse_ReservationLooks) GetExpirationTime() uint32 {
	if x != nil {
		return x.ExpirationTime
	}
	return 0
}

func (x *ListResponse_ReservationLooks) GetMinbw() uint32 {
	if x != nil {
		return x.Minbw
	}
	return 0
}

func (x *ListResponse_ReservationLooks) GetMaxbw() uint32 {
	if x != nil {
		return x.Maxbw
	}
	return 0
}

func (x *ListResponse_ReservationLooks) GetAllocbw() uint32 {
	if x != nil {
		return x.Allocbw
	}
	return 0
}

func (x *ListResponse_ReservationLooks) GetSplitcls() uint32 {
	if x != nil {
		return x.Splitcls
	}
	return 0
}

func (x *ListResponse_ReservationLooks) GetPath() []*PathStep {
	if x != nil {
		return x.Path
	}
	return nil
}

type E2ESetupRequest_PathParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Segments       []*ReservationID `protobuf:"bytes,1,rep,name=segments,proto3" json:"segments,omitempty"`
	CurrentSegment uint32           `protobuf:"varint,2,opt,name=current_segment,json=currentSegment,proto3" json:"current_segment,omitempty"`
	SrcIa          uint64           `protobuf:"varint,3,opt,name=src_ia,json=srcIa,proto3" json:"src_ia,omitempty"`
	SrcHost        []byte           `protobuf:"bytes,4,opt,name=src_host,json=srcHost,proto3" json:"src_host,omitempty"`
	DstIa          uint64           `protobuf:"varint,5,opt,name=dst_ia,json=dstIa,proto3" json:"dst_ia,omitempty"`
	DstHost        []byte           `protobuf:"bytes,6,opt,name=dst_host,json=dstHost,proto3" json:"dst_host,omitempty"`
}

func (x *E2ESetupRequest_PathParams) Reset() {
	*x = E2ESetupRequest_PathParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ESetupRequest_PathParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ESetupRequest_PathParams) ProtoMessage() {}

func (x *E2ESetupRequest_PathParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ESetupRequest_PathParams.ProtoReflect.Descriptor instead.
func (*E2ESetupRequest_PathParams) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{12, 0}
}

func (x *E2ESetupRequest_PathParams) GetSegments() []*ReservationID {
	if x != nil {
		return x.Segments
	}
	return nil
}

func (x *E2ESetupRequest_PathParams) GetCurrentSegment() uint32 {
	if x != nil {
		return x.CurrentSegment
	}
	return 0
}

func (x *E2ESetupRequest_PathParams) GetSrcIa() uint64 {
	if x != nil {
		return x.SrcIa
	}
	return 0
}

func (x *E2ESetupRequest_PathParams) GetSrcHost() []byte {
	if x != nil {
		return x.SrcHost
	}
	return nil
}

func (x *E2ESetupRequest_PathParams) GetDstIa() uint64 {
	if x != nil {
		return x.DstIa
	}
	return 0
}

func (x *E2ESetupRequest_PathParams) GetDstHost() []byte {
	if x != nil {
		return x.DstHost
	}
	return nil
}

type E2ESetupRequest_E2ESetupBead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Maxbw uint32 `protobuf:"varint,1,opt,name=maxbw,proto3" json:"maxbw,omitempty"`
}

func (x *E2ESetupRequest_E2ESetupBead) Reset() {
	*x = E2ESetupRequest_E2ESetupBead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ESetupRequest_E2ESetupBead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ESetupRequest_E2ESetupBead) ProtoMessage() {}

func (x *E2ESetupRequest_E2ESetupBead) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ESetupRequest_E2ESetupBead.ProtoReflect.Descriptor instead.
func (*E2ESetupRequest_E2ESetupBead) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{12, 1}
}

func (x *E2ESetupRequest_E2ESetupBead) GetMaxbw() uint32 {
	if x != nil {
		return x.Maxbw
	}
	return 0
}

type E2ESetupResponse_Failure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message         string                          `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	FailedStep      uint32                          `protobuf:"varint,2,opt,name=failed_step,json=failedStep,proto3" json:"failed_step,omitempty"`
	Allocationtrail []*E2ESetupRequest_E2ESetupBead `protobuf:"bytes,3,rep,name=allocationtrail,proto3" json:"allocationtrail,omitempty"`
}

func (x *E2ESetupResponse_Failure) Reset() {
	*x = E2ESetupResponse_Failure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ESetupResponse_Failure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ESetupResponse_Failure) ProtoMessage() {}

func (x *E2ESetupResponse_Failure) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ESetupResponse_Failure.ProtoReflect.Descriptor instead.
func (*E2ESetupResponse_Failure) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{13, 0}
}

func (x *E2ESetupResponse_Failure) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *E2ESetupResponse_Failure) GetFailedStep() uint32 {
	if x != nil {
		return x.FailedStep
	}
	return 0
}

func (x *E2ESetupResponse_Failure) GetAllocationtrail() []*E2ESetupRequest_E2ESetupBead {
	if x != nil {
		return x.Allocationtrail
	}
	return nil
}

type DaemonSetupResponse_Failure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMessage string   `protobuf:"bytes,1,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	FailedStep   uint32   `protobuf:"varint,2,opt,name=failed_step,json=failedStep,proto3" json:"failed_step,omitempty"`
	AllocTrail   []uint32 `protobuf:"varint,3,rep,packed,name=alloc_trail,json=allocTrail,proto3" json:"alloc_trail,omitempty"`
}

func (x *DaemonSetupResponse_Failure) Reset() {
	*x = DaemonSetupResponse_Failure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DaemonSetupResponse_Failure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DaemonSetupResponse_Failure) ProtoMessage() {}

func (x *DaemonSetupResponse_Failure) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DaemonSetupResponse_Failure.ProtoReflect.Descriptor instead.
func (*DaemonSetupResponse_Failure) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{17, 0}
}

func (x *DaemonSetupResponse_Failure) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *DaemonSetupResponse_Failure) GetFailedStep() uint32 {
	if x != nil {
		return x.FailedStep
	}
	return 0
}

func (x *DaemonSetupResponse_Failure) GetAllocTrail() []uint32 {
	if x != nil {
		return x.AllocTrail
	}
	return nil
}

type DaemonSetupResponse_Success struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spath   []byte `protobuf:"bytes,1,opt,name=spath,proto3" json:"spath,omitempty"`
	NextHop string `protobuf:"bytes,2,opt,name=next_hop,json=nextHop,proto3" json:"next_hop,omitempty"`
}

func (x *DaemonSetupResponse_Success) Reset() {
	*x = DaemonSetupResponse_Success{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DaemonSetupResponse_Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DaemonSetupResponse_Success) ProtoMessage() {}

func (x *DaemonSetupResponse_Success) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DaemonSetupResponse_Success.ProtoReflect.Descriptor instead.
func (*DaemonSetupResponse_Success) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{17, 1}
}

func (x *DaemonSetupResponse_Success) GetSpath() []byte {
	if x != nil {
		return x.Spath
	}
	return nil
}

func (x *DaemonSetupResponse_Success) GetNextHop() string {
	if x != nil {
		return x.NextHop
	}
	return ""
}

type DaemonCleanupResponse_Failure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMessage string `protobuf:"bytes,1,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	FailedStep   uint32 `protobuf:"varint,2,opt,name=failed_step,json=failedStep,proto3" json:"failed_step,omitempty"`
}

func (x *DaemonCleanupResponse_Failure) Reset() {
	*x = DaemonCleanupResponse_Failure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DaemonCleanupResponse_Failure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DaemonCleanupResponse_Failure) ProtoMessage() {}

func (x *DaemonCleanupResponse_Failure) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DaemonCleanupResponse_Failure.ProtoReflect.Descriptor instead.
func (*DaemonCleanupResponse_Failure) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{19, 0}
}

func (x *DaemonCleanupResponse_Failure) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *DaemonCleanupResponse_Failure) GetFailedStep() uint32 {
	if x != nil {
		return x.FailedStep
	}
	return 0
}

var File_proto_colibri_v1_colibri_proto protoreflect.FileDescriptor

var file_proto_colibri_v1_colibri_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e,
	0x76, 0x31, 0x22, 0x3b, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x61, 0x73, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x22,
	0x68, 0x0a, 0x0a, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x20, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x22, 0x40, 0x0a, 0x0c, 0x50, 0x61, 0x74,
	0x68, 0x45, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x22, 0x40, 0x0a, 0x0e, 0x41,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x61, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x62, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x62, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x78, 0x62, 0x77,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x61, 0x78, 0x62, 0x77, 0x22, 0x4c, 0x0a,
	0x08, 0x50, 0x61, 0x74, 0x68, 0x53, 0x74, 0x65, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x6e, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x0f,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x65, 0x70, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x53, 0x74, 0x65, 0x70, 0x52, 0x05, 0x73,
	0x74, 0x65, 0x70, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x74, 0x68, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x70, 0x61, 0x74, 0x68, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x74, 0x68, 0x52, 0x61, 0x77, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x73, 0x70, 0x61, 0x74, 0x68, 0x52, 0x61, 0x77, 0x22, 0xa5,
	0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x35, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x8d, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c,
	0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x3e, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c,
	0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x1a, 0x09, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x1a, 0x63,
	0x0a, 0x07, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x6f,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67,
	0x48, 0x6f, 0x70, 0x42, 0x11, 0x0a, 0x0f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x66,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x22, 0xb6, 0x04, 0x0a, 0x13, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d,
	0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x44, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x1a, 0xa9, 0x03, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x27,
	0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x6c, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x72, 0x6c, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x74,
	0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61,
	0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69, 0x6e, 0x62, 0x77, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x69, 0x6e, 0x62, 0x77, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x61, 0x78, 0x62, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x61, 0x78,
	0x62, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x63, 0x6c, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x63, 0x6c, 0x73, 0x12, 0x44,
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x5f, 0x61, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x45, 0x6e,
	0x64, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x41, 0x74, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x40, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x5f, 0x61, 0x74,
	0x5f, 0x65, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x74, 0x68, 0x45, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70,
	0x73, 0x41, 0x74, 0x45, 0x6e, 0x64, 0x12, 0x4a, 0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x61,
	0x64, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x69, 0x6c, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x76, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x72,
	0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x22,
	0x9f, 0x02, 0x0a, 0x14, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x4a, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x48, 0x00, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x1a, 0x8f, 0x01, 0x0a,
	0x07, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x07, 0x66,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x46, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x11,
	0x0a, 0x0f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x22, 0x41, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x15, 0x0a, 0x06, 0x64, 0x73, 0x74, 0x5f, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x64, 0x73, 0x74, 0x49, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x74, 0x68, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x74, 0x68,
	0x54, 0x79, 0x70, 0x65, 0x22, 0xb7, 0x03, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x53, 0x0a, 0x0c, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x6f, 0x6b,
	0x73, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a,
	0xac, 0x02, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x2f, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x52, 0x02, 0x49, 0x44, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x72, 0x63, 0x5f, 0x69, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x72, 0x63, 0x49, 0x61, 0x12, 0x15, 0x0a, 0x06,
	0x64, 0x73, 0x74, 0x5f, 0x69, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x64, 0x73,
	0x74, 0x49, 0x61, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x69, 0x6e, 0x62, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x69, 0x6e,
	0x62, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x78, 0x62, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x6d, 0x61, 0x78, 0x62, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x6c, 0x6f,
	0x63, 0x62, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x63,
	0x62, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x63, 0x6c, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x63, 0x6c, 0x73, 0x12, 0x2e,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x74, 0x68, 0x53, 0x74, 0x65, 0x70, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x81,
	0x04, 0x0a, 0x0f, 0x45, 0x32, 0x65, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x77,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x42, 0x77, 0x12, 0x44, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69,
	0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x32, 0x65, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x58, 0x0a, 0x0f, 0x61, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62,
	0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x32, 0x65, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x32, 0x65, 0x53, 0x65, 0x74, 0x75, 0x70, 0x42, 0x65,
	0x61, 0x64, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x69, 0x6c, 0x1a, 0xd6, 0x01, 0x0a, 0x0a, 0x50, 0x61, 0x74, 0x68, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x3b, 0x0a, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c,
	0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x72, 0x63, 0x5f,
	0x69, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x72, 0x63, 0x49, 0x61, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x73, 0x72, 0x63, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x73,
	0x74, 0x5f, 0x69, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x64, 0x73, 0x74, 0x49,
	0x61, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x73, 0x74, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x64, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x1a, 0x24, 0x0a, 0x0c,
	0x45, 0x32, 0x65, 0x53, 0x65, 0x74, 0x75, 0x70, 0x42, 0x65, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x61, 0x78, 0x62, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x61, 0x78,
	0x62, 0x77, 0x22, 0x8f, 0x02, 0x0a, 0x10, 0x45, 0x32, 0x65, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x32, 0x65, 0x53,
	0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x1a, 0x9e, 0x01, 0x0a, 0x07, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x53, 0x74, 0x65, 0x70, 0x12, 0x58, 0x0a, 0x0f, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69,
	0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x32, 0x65, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x32, 0x65, 0x53, 0x65, 0x74, 0x75, 0x70, 0x42,
	0x65, 0x61, 0x64, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x69, 0x6c, 0x22, 0x2f, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x69, 0x74,
	0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15,
	0x0a, 0x06, 0x64, 0x73, 0x74, 0x5f, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x64, 0x73, 0x74, 0x49, 0x61, 0x22, 0xb7, 0x02, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74,
	0x69, 0x74, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x72, 0x63, 0x5f, 0x69, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x72, 0x63, 0x49, 0x61, 0x12, 0x15, 0x0a,
	0x06, 0x64, 0x73, 0x74, 0x5f, 0x69, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x64,
	0x73, 0x74, 0x49, 0x61, 0x12, 0x3f, 0x0a, 0x02, 0x75, 0x70, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x6f, 0x6b,
	0x73, 0x52, 0x02, 0x75, 0x70, 0x12, 0x43, 0x0a, 0x04, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69,
	0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x04, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x64, 0x6f,
	0x77, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x04, 0x64, 0x6f, 0x77, 0x6e, 0x22,
	0x84, 0x02, 0x0a, 0x12, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x72, 0x63, 0x5f, 0x69, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x72, 0x63, 0x49, 0x61, 0x12, 0x15, 0x0a,
	0x06, 0x64, 0x73, 0x74, 0x5f, 0x69, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x64,
	0x73, 0x74, 0x49, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x73, 0x74, 0x5f, 0x68, 0x6f, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x64, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x12,
	0x2f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x3b, 0x0a, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x5f, 0x62, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x42, 0x77, 0x22, 0xd5, 0x02, 0x0a, 0x13, 0x44, 0x61, 0x65, 0x6d, 0x6f,
	0x6e, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47,
	0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x07,
	0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x47, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x65, 0x6d,
	0x6f, 0x6e, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x1a, 0x70, 0x0a, 0x07, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x53, 0x74, 0x65,
	0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6c,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x54, 0x72, 0x61,
	0x69, 0x6c, 0x1a, 0x3a, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x73, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x6f, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x22, 0x5d,
	0x0a, 0x14, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62,
	0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xb3, 0x01,
	0x0a, 0x15, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x65, 0x6d,
	0x6f, 0x6e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x1a, 0x4f, 0x0a, 0x07, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x65,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x53,
	0x74, 0x65, 0x70, 0x22, 0xa8, 0x01, 0x0a, 0x14, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x41, 0x64,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x19, 0x0a, 0x08,
	0x64, 0x73, 0x74, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x64, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x65,
	0x78, 0x70, 0x5f, 0x69, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x67,
	0x65, 0x78, 0x70, 0x49, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x65, 0x78, 0x70, 0x5f,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x65,
	0x78, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x22, 0x3f,
	0x0a, 0x1c, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x41, 0x64, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x32,
	0xc2, 0x08, 0x0a, 0x07, 0x43, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x12, 0x5f, 0x0a, 0x0c, 0x53,
	0x65, 0x74, 0x75, 0x70, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62,
	0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x13,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69,
	0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x14,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c,
	0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a,
	0x0f, 0x54, 0x65, 0x61, 0x72, 0x64, 0x6f, 0x77, 0x6e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x13, 0x43, 0x6c, 0x65,
	0x61, 0x6e, 0x75, 0x70, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x10, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53,
	0x0a, 0x08, 0x53, 0x65, 0x74, 0x75, 0x70, 0x45, 0x32, 0x65, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x32,
	0x65, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x32, 0x65, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0f, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x45, 0x32,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x68, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x69, 0x74, 0x63, 0x68, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62,
	0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x69, 0x74, 0x63, 0x68,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x69, 0x74, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x10, 0x53, 0x65, 0x74,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69,
	0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x53, 0x65, 0x74,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x12,
	0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62,
	0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x43, 0x6c, 0x65, 0x61,
	0x6e, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61,
	0x65, 0x6d, 0x6f, 0x6e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x26, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61,
	0x65, 0x6d, 0x6f, 0x6e, 0x41, 0x64, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x1a, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62,
	0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x41, 0x64, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x63, 0x69, 0x6f, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x63,
	0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_colibri_v1_colibri_proto_rawDescOnce sync.Once
	file_proto_colibri_v1_colibri_proto_rawDescData = file_proto_colibri_v1_colibri_proto_rawDesc
)

func file_proto_colibri_v1_colibri_proto_rawDescGZIP() []byte {
	file_proto_colibri_v1_colibri_proto_rawDescOnce.Do(func() {
		file_proto_colibri_v1_colibri_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_colibri_v1_colibri_proto_rawDescData)
	})
	return file_proto_colibri_v1_colibri_proto_rawDescData
}

var file_proto_colibri_v1_colibri_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_colibri_v1_colibri_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_proto_colibri_v1_colibri_proto_goTypes = []interface{}{
	(IndexState_State)(0),                 // 0: proto.colibri.v1.IndexState.State
	(*ReservationID)(nil),                 // 1: proto.colibri.v1.ReservationID
	(*IndexState)(nil),                    // 2: proto.colibri.v1.IndexState
	(*PathEndProps)(nil),                  // 3: proto.colibri.v1.PathEndProps
	(*AllocationBead)(nil),                // 4: proto.colibri.v1.AllocationBead
	(*PathStep)(nil),                      // 5: proto.colibri.v1.PathStep
	(*TransparentPath)(nil),               // 6: proto.colibri.v1.TransparentPath
	(*Request)(nil),                       // 7: proto.colibri.v1.Request
	(*Response)(nil),                      // 8: proto.colibri.v1.Response
	(*SegmentSetupRequest)(nil),           // 9: proto.colibri.v1.SegmentSetupRequest
	(*SegmentSetupResponse)(nil),          // 10: proto.colibri.v1.SegmentSetupResponse
	(*ListRequest)(nil),                   // 11: proto.colibri.v1.ListRequest
	(*ListResponse)(nil),                  // 12: proto.colibri.v1.ListResponse
	(*E2ESetupRequest)(nil),               // 13: proto.colibri.v1.E2eSetupRequest
	(*E2ESetupResponse)(nil),              // 14: proto.colibri.v1.E2eSetupResponse
	(*ListStitchablesRequest)(nil),        // 15: proto.colibri.v1.ListStitchablesRequest
	(*ListStitchablesResponse)(nil),       // 16: proto.colibri.v1.ListStitchablesResponse
	(*DaemonSetupRequest)(nil),            // 17: proto.colibri.v1.DaemonSetupRequest
	(*DaemonSetupResponse)(nil),           // 18: proto.colibri.v1.DaemonSetupResponse
	(*DaemonCleanupRequest)(nil),          // 19: proto.colibri.v1.DaemonCleanupRequest
	(*DaemonCleanupResponse)(nil),         // 20: proto.colibri.v1.DaemonCleanupResponse
	(*DaemonAdmissionEntry)(nil),          // 21: proto.colibri.v1.DaemonAdmissionEntry
	(*DaemonAdmissionEntryResponse)(nil),  // 22: proto.colibri.v1.DaemonAdmissionEntryResponse
	(*Response_Success)(nil),              // 23: proto.colibri.v1.Response.Success
	(*Response_Failure)(nil),              // 24: proto.colibri.v1.Response.Failure
	(*SegmentSetupRequest_Params)(nil),    // 25: proto.colibri.v1.SegmentSetupRequest.Params
	(*SegmentSetupResponse_Failure)(nil),  // 26: proto.colibri.v1.SegmentSetupResponse.Failure
	(*ListResponse_ReservationLooks)(nil), // 27: proto.colibri.v1.ListResponse.ReservationLooks
	(*E2ESetupRequest_PathParams)(nil),    // 28: proto.colibri.v1.E2eSetupRequest.PathParams
	(*E2ESetupRequest_E2ESetupBead)(nil),  // 29: proto.colibri.v1.E2eSetupRequest.E2eSetupBead
	(*E2ESetupResponse_Failure)(nil),      // 30: proto.colibri.v1.E2eSetupResponse.Failure
	(*DaemonSetupResponse_Failure)(nil),   // 31: proto.colibri.v1.DaemonSetupResponse.Failure
	(*DaemonSetupResponse_Success)(nil),   // 32: proto.colibri.v1.DaemonSetupResponse.Success
	(*DaemonCleanupResponse_Failure)(nil), // 33: proto.colibri.v1.DaemonCleanupResponse.Failure
}
var file_proto_colibri_v1_colibri_proto_depIdxs = []int32{
	0,  // 0: proto.colibri.v1.IndexState.state:type_name -> proto.colibri.v1.IndexState.State
	5,  // 1: proto.colibri.v1.TransparentPath.steps:type_name -> proto.colibri.v1.PathStep
	1,  // 2: proto.colibri.v1.Request.id:type_name -> proto.colibri.v1.ReservationID
	6,  // 3: proto.colibri.v1.Request.path:type_name -> proto.colibri.v1.TransparentPath
	23, // 4: proto.colibri.v1.Response.success:type_name -> proto.colibri.v1.Response.Success
	24, // 5: proto.colibri.v1.Response.failure:type_name -> proto.colibri.v1.Response.Failure
	7,  // 6: proto.colibri.v1.SegmentSetupRequest.base:type_name -> proto.colibri.v1.Request
	25, // 7: proto.colibri.v1.SegmentSetupRequest.params:type_name -> proto.colibri.v1.SegmentSetupRequest.Params
	26, // 8: proto.colibri.v1.SegmentSetupResponse.failure:type_name -> proto.colibri.v1.SegmentSetupResponse.Failure
	27, // 9: proto.colibri.v1.ListResponse.reservations:type_name -> proto.colibri.v1.ListResponse.ReservationLooks
	7,  // 10: proto.colibri.v1.E2eSetupRequest.base:type_name -> proto.colibri.v1.Request
	28, // 11: proto.colibri.v1.E2eSetupRequest.params:type_name -> proto.colibri.v1.E2eSetupRequest.PathParams
	29, // 12: proto.colibri.v1.E2eSetupRequest.allocationtrail:type_name -> proto.colibri.v1.E2eSetupRequest.E2eSetupBead
	30, // 13: proto.colibri.v1.E2eSetupResponse.failure:type_name -> proto.colibri.v1.E2eSetupResponse.Failure
	27, // 14: proto.colibri.v1.ListStitchablesResponse.up:type_name -> proto.colibri.v1.ListResponse.ReservationLooks
	27, // 15: proto.colibri.v1.ListStitchablesResponse.core:type_name -> proto.colibri.v1.ListResponse.ReservationLooks
	27, // 16: proto.colibri.v1.ListStitchablesResponse.down:type_name -> proto.colibri.v1.ListResponse.ReservationLooks
	1,  // 17: proto.colibri.v1.DaemonSetupRequest.id:type_name -> proto.colibri.v1.ReservationID
	1,  // 18: proto.colibri.v1.DaemonSetupRequest.segments:type_name -> proto.colibri.v1.ReservationID
	31, // 19: proto.colibri.v1.DaemonSetupResponse.failure:type_name -> proto.colibri.v1.DaemonSetupResponse.Failure
	32, // 20: proto.colibri.v1.DaemonSetupResponse.success:type_name -> proto.colibri.v1.DaemonSetupResponse.Success
	1,  // 21: proto.colibri.v1.DaemonCleanupRequest.id:type_name -> proto.colibri.v1.ReservationID
	33, // 22: proto.colibri.v1.DaemonCleanupResponse.failure:type_name -> proto.colibri.v1.DaemonCleanupResponse.Failure
	3,  // 23: proto.colibri.v1.SegmentSetupRequest.Params.props_at_start:type_name -> proto.colibri.v1.PathEndProps
	3,  // 24: proto.colibri.v1.SegmentSetupRequest.Params.props_at_end:type_name -> proto.colibri.v1.PathEndProps
	4,  // 25: proto.colibri.v1.SegmentSetupRequest.Params.allocationtrail:type_name -> proto.colibri.v1.AllocationBead
	24, // 26: proto.colibri.v1.SegmentSetupResponse.Failure.failure:type_name -> proto.colibri.v1.Response.Failure
	25, // 27: proto.colibri.v1.SegmentSetupResponse.Failure.request:type_name -> proto.colibri.v1.SegmentSetupRequest.Params
	1,  // 28: proto.colibri.v1.ListResponse.ReservationLooks.ID:type_name -> proto.colibri.v1.ReservationID
	5,  // 29: proto.colibri.v1.ListResponse.ReservationLooks.path:type_name -> proto.colibri.v1.PathStep
	1,  // 30: proto.colibri.v1.E2eSetupRequest.PathParams.segments:type_name -> proto.colibri.v1.ReservationID
	29, // 31: proto.colibri.v1.E2eSetupResponse.Failure.allocationtrail:type_name -> proto.colibri.v1.E2eSetupRequest.E2eSetupBead
	9,  // 32: proto.colibri.v1.Colibri.SetupSegment:input_type -> proto.colibri.v1.SegmentSetupRequest
	7,  // 33: proto.colibri.v1.Colibri.ConfirmSegmentIndex:input_type -> proto.colibri.v1.Request
	7,  // 34: proto.colibri.v1.Colibri.ActivateSegmentIndex:input_type -> proto.colibri.v1.Request
	7,  // 35: proto.colibri.v1.Colibri.TeardownSegment:input_type -> proto.colibri.v1.Request
	7,  // 36: proto.colibri.v1.Colibri.CleanupSegmentIndex:input_type -> proto.colibri.v1.Request
	11, // 37: proto.colibri.v1.Colibri.ListReservations:input_type -> proto.colibri.v1.ListRequest
	13, // 38: proto.colibri.v1.Colibri.SetupE2e:input_type -> proto.colibri.v1.E2eSetupRequest
	7,  // 39: proto.colibri.v1.Colibri.CleanupE2eIndex:input_type -> proto.colibri.v1.Request
	15, // 40: proto.colibri.v1.Colibri.ListStitchables:input_type -> proto.colibri.v1.ListStitchablesRequest
	17, // 41: proto.colibri.v1.Colibri.SetupReservation:input_type -> proto.colibri.v1.DaemonSetupRequest
	19, // 42: proto.colibri.v1.Colibri.CleanupReservation:input_type -> proto.colibri.v1.DaemonCleanupRequest
	21, // 43: proto.colibri.v1.Colibri.AddAdmissionEntry:input_type -> proto.colibri.v1.DaemonAdmissionEntry
	10, // 44: proto.colibri.v1.Colibri.SetupSegment:output_type -> proto.colibri.v1.SegmentSetupResponse
	8,  // 45: proto.colibri.v1.Colibri.ConfirmSegmentIndex:output_type -> proto.colibri.v1.Response
	8,  // 46: proto.colibri.v1.Colibri.ActivateSegmentIndex:output_type -> proto.colibri.v1.Response
	8,  // 47: proto.colibri.v1.Colibri.TeardownSegment:output_type -> proto.colibri.v1.Response
	8,  // 48: proto.colibri.v1.Colibri.CleanupSegmentIndex:output_type -> proto.colibri.v1.Response
	12, // 49: proto.colibri.v1.Colibri.ListReservations:output_type -> proto.colibri.v1.ListResponse
	14, // 50: proto.colibri.v1.Colibri.SetupE2e:output_type -> proto.colibri.v1.E2eSetupResponse
	8,  // 51: proto.colibri.v1.Colibri.CleanupE2eIndex:output_type -> proto.colibri.v1.Response
	16, // 52: proto.colibri.v1.Colibri.ListStitchables:output_type -> proto.colibri.v1.ListStitchablesResponse
	18, // 53: proto.colibri.v1.Colibri.SetupReservation:output_type -> proto.colibri.v1.DaemonSetupResponse
	20, // 54: proto.colibri.v1.Colibri.CleanupReservation:output_type -> proto.colibri.v1.DaemonCleanupResponse
	22, // 55: proto.colibri.v1.Colibri.AddAdmissionEntry:output_type -> proto.colibri.v1.DaemonAdmissionEntryResponse
	44, // [44:56] is the sub-list for method output_type
	32, // [32:44] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_proto_colibri_v1_colibri_proto_init() }
func file_proto_colibri_v1_colibri_proto_init() {
	if File_proto_colibri_v1_colibri_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_colibri_v1_colibri_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PathEndProps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocationBead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PathStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransparentPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SegmentSetupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SegmentSetupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ESetupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ESetupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStitchablesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStitchablesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DaemonSetupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DaemonSetupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DaemonCleanupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DaemonCleanupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DaemonAdmissionEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DaemonAdmissionEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response_Success); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response_Failure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SegmentSetupRequest_Params); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SegmentSetupResponse_Failure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResponse_ReservationLooks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ESetupRequest_PathParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ESetupRequest_E2ESetupBead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ESetupResponse_Failure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DaemonSetupResponse_Failure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DaemonSetupResponse_Success); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DaemonCleanupResponse_Failure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_colibri_v1_colibri_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*Response_Success_)(nil),
		(*Response_Failure_)(nil),
	}
	file_proto_colibri_v1_colibri_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*SegmentSetupResponse_Token)(nil),
		(*SegmentSetupResponse_Failure_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_colibri_v1_colibri_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_colibri_v1_colibri_proto_goTypes,
		DependencyIndexes: file_proto_colibri_v1_colibri_proto_depIdxs,
		EnumInfos:         file_proto_colibri_v1_colibri_proto_enumTypes,
		MessageInfos:      file_proto_colibri_v1_colibri_proto_msgTypes,
	}.Build()
	File_proto_colibri_v1_colibri_proto = out.File
	file_proto_colibri_v1_colibri_proto_rawDesc = nil
	file_proto_colibri_v1_colibri_proto_goTypes = nil
	file_proto_colibri_v1_colibri_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ColibriClient is the client API for Colibri service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ColibriClient interface {
	SetupSegment(ctx context.Context, in *SegmentSetupRequest, opts ...grpc.CallOption) (*SegmentSetupResponse, error)
	ConfirmSegmentIndex(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	ActivateSegmentIndex(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	TeardownSegment(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	CleanupSegmentIndex(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	ListReservations(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
	SetupE2E(ctx context.Context, in *E2ESetupRequest, opts ...grpc.CallOption) (*E2ESetupResponse, error)
	CleanupE2EIndex(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	ListStitchables(ctx context.Context, in *ListStitchablesRequest, opts ...grpc.CallOption) (*ListStitchablesResponse, error)
	SetupReservation(ctx context.Context, in *DaemonSetupRequest, opts ...grpc.CallOption) (*DaemonSetupResponse, error)
	CleanupReservation(ctx context.Context, in *DaemonCleanupRequest, opts ...grpc.CallOption) (*DaemonCleanupResponse, error)
	AddAdmissionEntry(ctx context.Context, in *DaemonAdmissionEntry, opts ...grpc.CallOption) (*DaemonAdmissionEntryResponse, error)
}

type colibriClient struct {
	cc grpc.ClientConnInterface
}

func NewColibriClient(cc grpc.ClientConnInterface) ColibriClient {
	return &colibriClient{cc}
}

func (c *colibriClient) SetupSegment(ctx context.Context, in *SegmentSetupRequest, opts ...grpc.CallOption) (*SegmentSetupResponse, error) {
	out := new(SegmentSetupResponse)
	err := c.cc.Invoke(ctx, "/proto.colibri.v1.Colibri/SetupSegment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *colibriClient) ConfirmSegmentIndex(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.colibri.v1.Colibri/ConfirmSegmentIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *colibriClient) ActivateSegmentIndex(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.colibri.v1.Colibri/ActivateSegmentIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *colibriClient) TeardownSegment(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.colibri.v1.Colibri/TeardownSegment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *colibriClient) CleanupSegmentIndex(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.colibri.v1.Colibri/CleanupSegmentIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *colibriClient) ListReservations(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, "/proto.colibri.v1.Colibri/ListReservations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *colibriClient) SetupE2E(ctx context.Context, in *E2ESetupRequest, opts ...grpc.CallOption) (*E2ESetupResponse, error) {
	out := new(E2ESetupResponse)
	err := c.cc.Invoke(ctx, "/proto.colibri.v1.Colibri/SetupE2e", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *colibriClient) CleanupE2EIndex(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.colibri.v1.Colibri/CleanupE2eIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *colibriClient) ListStitchables(ctx context.Context, in *ListStitchablesRequest, opts ...grpc.CallOption) (*ListStitchablesResponse, error) {
	out := new(ListStitchablesResponse)
	err := c.cc.Invoke(ctx, "/proto.colibri.v1.Colibri/ListStitchables", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *colibriClient) SetupReservation(ctx context.Context, in *DaemonSetupRequest, opts ...grpc.CallOption) (*DaemonSetupResponse, error) {
	out := new(DaemonSetupResponse)
	err := c.cc.Invoke(ctx, "/proto.colibri.v1.Colibri/SetupReservation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *colibriClient) CleanupReservation(ctx context.Context, in *DaemonCleanupRequest, opts ...grpc.CallOption) (*DaemonCleanupResponse, error) {
	out := new(DaemonCleanupResponse)
	err := c.cc.Invoke(ctx, "/proto.colibri.v1.Colibri/CleanupReservation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *colibriClient) AddAdmissionEntry(ctx context.Context, in *DaemonAdmissionEntry, opts ...grpc.CallOption) (*DaemonAdmissionEntryResponse, error) {
	out := new(DaemonAdmissionEntryResponse)
	err := c.cc.Invoke(ctx, "/proto.colibri.v1.Colibri/AddAdmissionEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ColibriServer is the server API for Colibri service.
type ColibriServer interface {
	SetupSegment(context.Context, *SegmentSetupRequest) (*SegmentSetupResponse, error)
	ConfirmSegmentIndex(context.Context, *Request) (*Response, error)
	ActivateSegmentIndex(context.Context, *Request) (*Response, error)
	TeardownSegment(context.Context, *Request) (*Response, error)
	CleanupSegmentIndex(context.Context, *Request) (*Response, error)
	ListReservations(context.Context, *ListRequest) (*ListResponse, error)
	SetupE2E(context.Context, *E2ESetupRequest) (*E2ESetupResponse, error)
	CleanupE2EIndex(context.Context, *Request) (*Response, error)
	ListStitchables(context.Context, *ListStitchablesRequest) (*ListStitchablesResponse, error)
	SetupReservation(context.Context, *DaemonSetupRequest) (*DaemonSetupResponse, error)
	CleanupReservation(context.Context, *DaemonCleanupRequest) (*DaemonCleanupResponse, error)
	AddAdmissionEntry(context.Context, *DaemonAdmissionEntry) (*DaemonAdmissionEntryResponse, error)
}

// UnimplementedColibriServer can be embedded to have forward compatible implementations.
type UnimplementedColibriServer struct {
}

func (*UnimplementedColibriServer) SetupSegment(context.Context, *SegmentSetupRequest) (*SegmentSetupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetupSegment not implemented")
}
func (*UnimplementedColibriServer) ConfirmSegmentIndex(context.Context, *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConfirmSegmentIndex not implemented")
}
func (*UnimplementedColibriServer) ActivateSegmentIndex(context.Context, *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ActivateSegmentIndex not implemented")
}
func (*UnimplementedColibriServer) TeardownSegment(context.Context, *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TeardownSegment not implemented")
}
func (*UnimplementedColibriServer) CleanupSegmentIndex(context.Context, *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CleanupSegmentIndex not implemented")
}
func (*UnimplementedColibriServer) ListReservations(context.Context, *ListRequest) (*ListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListReservations not implemented")
}
func (*UnimplementedColibriServer) SetupE2E(context.Context, *E2ESetupRequest) (*E2ESetupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetupE2E not implemented")
}
func (*UnimplementedColibriServer) CleanupE2EIndex(context.Context, *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CleanupE2EIndex not implemented")
}
func (*UnimplementedColibriServer) ListStitchables(context.Context, *ListStitchablesRequest) (*ListStitchablesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListStitchables not implemented")
}
func (*UnimplementedColibriServer) SetupReservation(context.Context, *DaemonSetupRequest) (*DaemonSetupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetupReservation not implemented")
}
func (*UnimplementedColibriServer) CleanupReservation(context.Context, *DaemonCleanupRequest) (*DaemonCleanupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CleanupReservation not implemented")
}
func (*UnimplementedColibriServer) AddAdmissionEntry(context.Context, *DaemonAdmissionEntry) (*DaemonAdmissionEntryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddAdmissionEntry not implemented")
}

func RegisterColibriServer(s *grpc.Server, srv ColibriServer) {
	s.RegisterService(&_Colibri_serviceDesc, srv)
}

func _Colibri_SetupSegment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SegmentSetupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColibriServer).SetupSegment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.colibri.v1.Colibri/SetupSegment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColibriServer).SetupSegment(ctx, req.(*SegmentSetupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Colibri_ConfirmSegmentIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColibriServer).ConfirmSegmentIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.colibri.v1.Colibri/ConfirmSegmentIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColibriServer).ConfirmSegmentIndex(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Colibri_ActivateSegmentIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColibriServer).ActivateSegmentIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.colibri.v1.Colibri/ActivateSegmentIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColibriServer).ActivateSegmentIndex(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Colibri_TeardownSegment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColibriServer).TeardownSegment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.colibri.v1.Colibri/TeardownSegment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColibriServer).TeardownSegment(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Colibri_CleanupSegmentIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColibriServer).CleanupSegmentIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.colibri.v1.Colibri/CleanupSegmentIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColibriServer).CleanupSegmentIndex(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Colibri_ListReservations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColibriServer).ListReservations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.colibri.v1.Colibri/ListReservations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColibriServer).ListReservations(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Colibri_SetupE2E_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(E2ESetupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColibriServer).SetupE2E(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.colibri.v1.Colibri/SetupE2E",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColibriServer).SetupE2E(ctx, req.(*E2ESetupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Colibri_CleanupE2EIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColibriServer).CleanupE2EIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.colibri.v1.Colibri/CleanupE2EIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColibriServer).CleanupE2EIndex(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Colibri_ListStitchables_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListStitchablesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColibriServer).ListStitchables(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.colibri.v1.Colibri/ListStitchables",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColibriServer).ListStitchables(ctx, req.(*ListStitchablesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Colibri_SetupReservation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DaemonSetupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColibriServer).SetupReservation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.colibri.v1.Colibri/SetupReservation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColibriServer).SetupReservation(ctx, req.(*DaemonSetupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Colibri_CleanupReservation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DaemonCleanupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColibriServer).CleanupReservation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.colibri.v1.Colibri/CleanupReservation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColibriServer).CleanupReservation(ctx, req.(*DaemonCleanupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Colibri_AddAdmissionEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DaemonAdmissionEntry)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColibriServer).AddAdmissionEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.colibri.v1.Colibri/AddAdmissionEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColibriServer).AddAdmissionEntry(ctx, req.(*DaemonAdmissionEntry))
	}
	return interceptor(ctx, in, info, handler)
}

var _Colibri_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.colibri.v1.Colibri",
	HandlerType: (*ColibriServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetupSegment",
			Handler:    _Colibri_SetupSegment_Handler,
		},
		{
			MethodName: "ConfirmSegmentIndex",
			Handler:    _Colibri_ConfirmSegmentIndex_Handler,
		},
		{
			MethodName: "ActivateSegmentIndex",
			Handler:    _Colibri_ActivateSegmentIndex_Handler,
		},
		{
			MethodName: "TeardownSegment",
			Handler:    _Colibri_TeardownSegment_Handler,
		},
		{
			MethodName: "CleanupSegmentIndex",
			Handler:    _Colibri_CleanupSegmentIndex_Handler,
		},
		{
			MethodName: "ListReservations",
			Handler:    _Colibri_ListReservations_Handler,
		},
		{
			MethodName: "SetupE2e",
			Handler:    _Colibri_SetupE2E_Handler,
		},
		{
			MethodName: "CleanupE2eIndex",
			Handler:    _Colibri_CleanupE2EIndex_Handler,
		},
		{
			MethodName: "ListStitchables",
			Handler:    _Colibri_ListStitchables_Handler,
		},
		{
			MethodName: "SetupReservation",
			Handler:    _Colibri_SetupReservation_Handler,
		},
		{
			MethodName: "CleanupReservation",
			Handler:    _Colibri_CleanupReservation_Handler,
		},
		{
			MethodName: "AddAdmissionEntry",
			Handler:    _Colibri_AddAdmissionEntry_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/colibri/v1/colibri.proto",
}
